@model asti.CustomerServiceApplication.Models.UserClass

@{
    ViewBag.Title = "All The Small Things";
}

<div class="row">
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-red">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <img class="profile" src="~/Content/img/@(Model.Username.Replace("@", string.Empty).Replace(",", string.Empty)).jpg" )" />
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="huge">EP: @Model.CurrentXp</div>
                        <div>Level: @Model.Level</div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <span class="pull-left"><strong>@Model.Username.Replace(',' ,'.')</strong></span>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-github fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        @{ 
                           var ep2 = Model.XpHistory.Where(xh => xh.ActionType == 100).Sum(xh => xh.Value);
                        }
                        <div class="huge">EP: @ep2</div>
                        <div>Level: @(ep2 > 0 ? Math.Round(Math.Sqrt(ep2)) : 0)</div>
                    </div>
                </div>
            </div>
            <a href="#">
                <div class="panel-footer">
                    <span class="pull-left">GitHub</span>
                    <div class="clearfix"></div>
                </div>
            </a>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-green">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-thumbs-o-up fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        @{
                           var ep = Model.XpHistory.Where(xh => xh.ActionType == 900).Sum(xh => xh.Value);
                        }
                        <div class="huge">EP: @ep</div>
                        <div>Level: @(ep > 0 ? Math.Round(Math.Sqrt(ep)) : 0)</div>
                    </div>
                </div>
            </div>
            <a href="#">
                <div class="panel-footer">
                    <span class="pull-left">Service App</span>
                    <div class="clearfix"></div>
                </div>
            </a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <h3>Engagement Today</h3>
        @{ 
           var todayEngadgementTotal = Model.TodaysCheckins.Sum(ch => ch.Value);
        }
        
        @if (todayEngadgementTotal >= 300)
        {
           <div class="progress">
                <div class="progress-bar progress-bar-danger" style="width: 33%">
                    <span class="sr-only">10% Complete (danger)</span>
                </div>
                <div class="progress-bar progress-bar-warning progress-bar-striped" style="width: 33%">
                    <span class="sr-only">20% Complete (warning)</span>
                </div>
                <div class="progress-bar progress-bar-success" style="width: 33%">
                    <span class="sr-only">35% Complete (success)</span>
                </div>
            </div>
        }
        else
        {
        <div class="progress">
            <div class="progress-bar progress-bar-danger" style="width: @(100 / todayEngadgementTotal)%">
                <span class="sr-only">10% Complete (danger)</span>
            </div>
            <div class="progress-bar progress-bar-warning progress-bar-striped" style="width: @(100 / todayEngadgementTotal)%">
                <span class="sr-only">20% Complete (warning)</span>
            </div>
            <div class="progress-bar progress-bar-success" style="width: @(100 / todayEngadgementTotal)%">
                <span class="sr-only">35% Complete (success)</span>
            </div>
        </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <h3>Engagement Yesterday</h3>
        @{
           var yesterdayEngadgement = Model.YesterdaysCheckins.Sum(ch => ch.Value);
        }

        @if (yesterdayEngadgement >= 300)
        {
        <div class="progress">
            <div class="progress-bar progress-bar-danger" style="width: 33%">
                <span class="sr-only">10% Complete (danger)</span>
            </div>
            <div class="progress-bar progress-bar-warning progress-bar-striped" style="width: 33%">
                <span class="sr-only">20% Complete (warning)</span>
            </div>
            <div class="progress-bar progress-bar-success" style="width: 33%">
                <span class="sr-only">35% Complete (success)</span>
            </div>
        </div>
        }
        else if (yesterdayEngadgement > 0)
        {
        <div class="progress">
            <div class="progress-bar progress-bar-danger" style="width: @(100 / yesterdayEngadgement)%">
                <span class="sr-only">10% Complete (danger)</span>
            </div>
            <div class="progress-bar progress-bar-warning progress-bar-striped" style="width: @(100 / yesterdayEngadgement)%">
                <span class="sr-only">20% Complete (warning)</span>
            </div>
            <div class="progress-bar progress-bar-success" style="width: @(100 / yesterdayEngadgement)%">
                <span class="sr-only">35% Complete (success)</span>
            </div>
        </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <h3>Enagagement Points (Last 48 hours)</h3>
        <div class="panel panel-default">
            <div class="panel-body">
                <div id="morris-area-chart"></div>
            </div>
        </div>
    </div>
</div>

<hr/>

@{
   var data = Model.XpHistory.Select(c => new { c.DateTime, c.Value }).OrderBy(x => x.DateTime).ToList();

}


@section scripts {
    <script>
		$(function() {
			Morris.Area({
				element: 'morris-area-chart',
                data: [

                @for (int i = 0; i < data.Count; i++)
                {

                        <text>
                        {period:' @i',XP:@data[i].Value},
</text>
                }

                ],
				xkey: 'period',
				ykeys: ['XP'],
				//labels: ['XP'],
				pointSize: 1,
				hideHover: 'auto',
				resize: true

            });


		});
    </script>
}